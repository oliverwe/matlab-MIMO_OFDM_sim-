%BPSK over AWGN (complex baseband model) with Hamming coding
clearvars; clc;
nBits =10^6; %number of source bits
EbN0dB = -2:1:12; % Eb/N0 range in dB for simulation
MOD_TYPE='PSK'; %Modulation type 
M=2; %For BPSK -> 2-PSK
%Block code definitions
G=[ 1 0 0 0 1 1 0; %generator matrix for (7,4) Hamming code
    0 1 0 0 1 0 1;
    0 0 1 0 0 1 1;
    0 0 0 1 1 1 1];
%G =[1 0 0 0 0 0 0 0 0 0 0 0 0 1 1;%G matrix (15,11) Hamming code
%    0 1 0 0 0 0 0 0 0 0 0 0 1 0 1;
%    0 0 1 0 0 0 0 0 0 0 0 0 1 1 0;
%    0 0 0 1 0 0 0 0 0 0 0 0 1 1 1;
%    0 0 0 0 1 0 0 0 0 0 0 1 0 0 1;
%    0 0 0 0 0 1 0 0 0 0 0 1 0 1 0;
%    0 0 0 0 0 0 1 0 0 0 0 1 0 1 1;
%    0 0 0 0 0 0 0 1 0 0 0 1 1 0 0;
%    0 0 0 0 0 0 0 0 1 0 0 1 1 0 1;
%    0 0 0 0 0 0 0 0 0 1 0 1 1 1 0;
%    0 0 0 0 0 0 0 0 0 0 1 1 1 1 1];
[k,n] = size(G); %derive n and k from the G matrix
H = gen2parmat(G); %find the H matrix
syndromeTable = getSyndromeTable(G); %syndrome table for G

m=de2bi(0:1:2^k-1,'left-msb');%list all numbers from 0 to 2^k-1
C=mod(m*G,2); %list of all possible codewords (code book)

%EcN0dB calculation to account for overheads
EcN0dB = EbN0dB + 10*log10(log2(M)) + 10*log10(k/n); 
BER_Hamming_Hard = zeros(1,length(EbN0dB));%simulated BER (Hard)
BER_Hamming_Soft = zeros(1,length(EbN0dB));%simulated BER (Soft)
    
for i=1:length(EcN0dB),
  %---- Transmitter - Block encoding, BPSK modulation-------
  x =rand(1,nBits) > 0.5; %stream of random information bits
  %append zeros to account for block size of encoder
  x =[x zeros(1,k-mod(nBits,k))];
  
  %reshape information stream to blocks
  m = reshape(x,k,length(x)/k).'; %message blocks
  cBlocks = mod(m*G,2);%codewords generated by the block encoder
  c= cBlocks.'; c = c(:).';%serialize codewords into one stream
  y = 2*c-1;%BPSK modulation
  
  %---------AWGN channel --------------------
  r  = add_awgn_noise(y,EcN0dB(i));%add AWGN noise
  
  %--------Hard decision decoding---------
  rHard = (r>=0);%BPSK demodulation (Hard)
  rHardBlks=reshape(rHard,n,length(rHard)/n).';%blocks of length n
  syndrome = mod(rHardBlks*H.',2); %find the syndrome
  syndrome = bi2de(syndrome,'left-msb');%decimal for indexing
  %1st column in syndrome table is syndrome, 2nd column is error
  errorEst=cell2mat(syndromeTable(syndrome+1,2));%return errors        
  cHardBlks = mod(rHardBlks-errorEst,2);%recovered codewords  
  mHardBlks = cHardBlks(:,1:k);%strip off parity bits
  %serialize into bit stream
  xHardBlks = mHardBlks.'; xHard=xHardBlks(:).';
  BER_Hamming_Hard(i) = sum(sum(x~=xHard))/numel(xHard);%BER
  
  %--------Soft decision decoding using unquantized r -------
  rBlks = reshape(r,n,length(r)/n).';%blocks of length n
  %Compute correlation metric and get index of maximum value
  [maxCorrVal,maxCorrIndex]=max((2*C-1)*rBlks.');
  cSoftBlks = C(maxCorrIndex,:);%recovered codewords
  mSoftBlks = cSoftBlks(:,1:k);%strip off parity bits
  %serialize into bit stream
  xSoftBlks = mSoftBlks.'; xSoft=xSoftBlks(:).';
  BER_Hamming_Soft(i) = sum(sum(x~=xSoft))/numel(xSoft);%BER
end
BER_uncoded_theory=0.5*erfc(sqrt(10.^(EbN0dB/10)));%BPSKBER(uncoded)
figure; semilogy(EbN0dB,BER_Hamming_Hard,'r*-'); hold on;
semilogy(EbN0dB,BER_Hamming_Soft,'bo-'); 
semilogy(EbN0dB,BER_uncoded_theory,'k-'); grid on;
legend('(7,4) Hamming (Hard)','(7,4) Hamming (Soft)',...
    'Uncoded BPSK (Theory)');
xlabel('Eb/N0(dB)');ylabel('Bit Error Rate (Pb)');
title('BER of BPSK system over AWGN');