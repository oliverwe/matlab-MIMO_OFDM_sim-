%Demonstrate error correction using Standard Array
%Given a generator matrix G, a standard array will be generated.
%If r is received vector, the error corrected sequence will be 
%chosen from the constructed standard array.
clearvars; clc;
G = [0 1 1 1 1 0 0; %Sample Generator matrix to test
     1 0 1 1 0 1 0;
     1 1 0 1 0 0 1];
[k,n] = size(G); %derive n and k from the G matrix
%standard array for the given generator matrix
[stdArray] = standardArray(G);

%Randomized simulation to test the communication chain
%--------Transmitter with encoder-------------------
x = rand(1,k) > 0.5 %randomized input message to block encoder
c = mod(x*G,2) %codeword generated by the block encoder

%--------Channel----------------------
d = 1; %d-bit error pattern to test with
%all possible combinations of d-bit error patterns
[E,nRows,nCols] = error_pattern_combos(d,n);
%randomly select a d-bit error pattern from the matrix of 
%all d-bit error patterns
index = ceil(rand * size(E,1));
e = E(index,:) %randomly selected error pattern
r = mod(c + e,2) %received vector containing errors

%--------Receiver with decoder----------------------
%Search through the standard array for the received vector r
%and return the error term (coset leader) and the codeword 
%(row header) from standard array.
[row,col]=find(cellfun(@(y) ismember(r, y,'rows'),stdArray)==1);
recoveredCW = cell2mat(stdArray(1,col)) %element from the top row
errorEst =cell2mat(stdArray(row,1)) %coset leader(estimated error)

if (recoveredCW==c), disp('Decoder success');
else, disp('Decoder error'); end