%Demonstrate error correction using Syndrome table decoding
clearvars; clc;

G = [0 1 1 1 1 0 0; %Sample Generator matrix to test
     1 0 1 1 0 1 0;
     1 1 0 1 0 0 1];
 
[k,n] = size(G); %derive n and k from the G matrix
H = gen2parmat(G); %find the H matrix

%Syndrome table for G, index sorted according to syndromes s=rH^T
syndromeTable = getSyndromeTable(G);

%Randomized simulation to test the communication chain
%--------Transmitter with encoder-------------------
x = rand(1,k) > 0.5 %randomized input message to block encoder
c = mod(x*G,2) %codeword generated by the block encoder

%--------Channel----------------------
d = 1; %d-bit error pattern to test with
%all possible combinations of d-bit error patterns
[E,nRows,nCols] = error_pattern_combos(d,n);
%randomly select a d-bit error pattern from the matrix of 
%all d-bit error patterns
index = ceil(rand * size(E,1));
e = E(index,:) %randomly selected error pattern
r = mod(c + e,2) %received vector containing errors

%--------Receiver with syndrome table decoder---------------------
s = mod(r*H.',2) %find the syndrome
s_dec = bi2de(s,'left-msb') %sorted syndomes (first column in table)
%read corresponding error pattern from second column
errorEst=syndromeTable(s_dec+1,2);%point at index s_dec and return e
errorEst = cell2mat(errorEst) %to convert cell to matrix
recoveredCW = mod(r - errorEst,2) %recovered codeword

if (recoveredCW==c),
    disp('Decoder success');
else
    disp('Decoder error');
end