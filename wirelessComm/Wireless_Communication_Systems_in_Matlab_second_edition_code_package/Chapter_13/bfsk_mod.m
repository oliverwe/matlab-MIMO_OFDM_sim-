function [s,t,phase,at] = bfsk_mod(a,Fc,Fd,L,Fs,fsk_type)
%Function to modulate an incoming binary stream using BFSK
%a - input binary data stream (0's and 1's) to modulate
%Fc - center frequency of the carrier in Hertz
%Fd - frequency separation measured from Fc
%L - number of samples in 1-bit period
%Fs - Sampling frequency for discrete-time simulation
%fsk_type - 'COHERENT' (default) or 'NONCOHERENT' FSK generation
%at each bit period when generating the carriers
%s - BFSK modulated signal
%t - generated time base for the modulated signal
%phase - initial phase generated by modulator, applicable only for
%coherent FSK. It can be used when using coherent detection at Rx
%at - data waveform for the input data
phase=0;
at = kron(a,ones(1,L)); %data to waveform
t = (0:1:length(at)-1)/Fs; %time base
if strcmpi(fsk_type,'NONCOHERENT'),
  c1 = cos(2*pi*(Fc+Fd/2)*t+2*pi*rand);%carrier 1 with random phase
  c2 = cos(2*pi*(Fc-Fd/2)*t+2*pi*rand);%carrier 2 with random phase
else
  phase=2*pi*rand;%random phase from uniform distribution [0,2pi)
  c1 = cos(2*pi*(Fc+Fd/2)*t+phase);%carrier 1 with random phase
  c2 = cos(2*pi*(Fc-Fd/2)*t+phase);%carrier 2 with random phase    
end
s = at.*c1 +(-at+1).*c2; %BFSK signal (MUX selection)
doPlot=0;
if doPlot,
  figure;subplot(2,1,1);plot(t,at);subplot(2,1,2);plot(t,s);
end;